name: Build

on:
  push:
    paths-ignore:
      - 'data/**'
      - 'hooks/**'
      - 'po/**'
      - 'icons/**'
      - 'LICENSE'
      - '*.md'
      - '*.sh'
      - '*.desktop'
      - '*.png'
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  CARGO_TERM_COLOR: always

jobs:
  archlinux:
    strategy:
      matrix:
        arch:
          [
            "linux/amd64 x86_64"
          ]
    name: "Archlinux ${{ matrix.arch }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Read info
        id: tags
        shell: bash
        run: |
          arch="${{ matrix.arch }}"
          echo ::set-output name=PLATFORM::${arch%% *}
          echo ::set-output name=ARCH::${arch##* }

      - name: Build ${{ matrix.arch }} release
        shell: bash
        run: |
          docker buildx build --platform ${{ steps.tags.outputs.PLATFORM }} \
          --tag cachyos_welcome:${{ steps.tags.outputs.ARCH }} \
          -f .github/archlinux/Dockerfile \
          --load \
          .

  fmt:
    name: rust fmt
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: install deps
        run: |
          sudo apt update
          sudo apt install ninja-build libgtk-3-dev
        shell: bash

      - uses: BSFishy/pip-action@v1
        with:
          packages: meson

      - name: Configure
        shell: bash
        run: |
          meson --buildtype=release --prefix=/usr build

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
